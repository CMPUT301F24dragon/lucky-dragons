package com.example.luckydragon.userStoryTest;

import static androidx.test.espresso.Espresso.onView;
import static androidx.test.espresso.action.ViewActions.click;
import static androidx.test.espresso.assertion.ViewAssertions.matches;
import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
import static androidx.test.espresso.matcher.ViewMatchers.withId;
import static androidx.test.espresso.matcher.ViewMatchers.withText;
import static org.hamcrest.CoreMatchers.not;

import android.content.Context;
import android.content.Intent;

import androidx.test.core.app.ActivityScenario;
import androidx.test.espresso.matcher.ViewMatchers;
import androidx.test.platform.app.InstrumentationRegistry;

import com.example.luckydragon.Activities.SelectRoleActivity;
import com.example.luckydragon.GlobalApp;
import com.example.luckydragon.MockedDb;
import com.example.luckydragon.Models.EventList;
import com.example.luckydragon.R;

import org.junit.Test;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganizerEventPosterTest extends MockedDb {
    @Override
    protected HashMap<String, Object> getMockUserData() {
        // Define test user
        HashMap<String, Object> testUserData = new HashMap<>();
        // Personal info
        testUserData.put("name", "John Doe");
        testUserData.put("email", "jdoe@ualberta.ca");
        testUserData.put("phoneNumber", "780-831-3291");
        // Roles
        testUserData.put("isEntrant", true);
        testUserData.put("isOrganizer", true);
        testUserData.put("isAdmin", false);
        // Facility
        testUserData.put("facility", "Crypto.com Arena");

        return testUserData;
    }

    @Test
    public void testViewEventPoster() {
        final Context targetContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        final Intent intent = new Intent(targetContext, SelectRoleActivity.class);

        GlobalApp globalApp = (GlobalApp) targetContext.getApplicationContext();
        globalApp.setDb(mockFirestore);

        try (final ActivityScenario<SelectRoleActivity> scenario = ActivityScenario.launch(intent)) {
            // User is not admin, so admin button should not show
            onView(ViewMatchers.withId(R.id.entrantButton)).check(matches(isDisplayed()));
            onView(withId(R.id.organizerButton)).check(matches(isDisplayed()));
            onView(withId(R.id.adminButton)).check(matches(not(isDisplayed())));

            // User clicks "Organizer"
            onView(withId(R.id.organizerButton)).perform(click());

            // Profile activity should open and organizer profile should be displayed
            onView(withId(R.id.organizerProfileLayout)).check(matches(isDisplayed()));

            // The organizer's events should be displayed
            onView(withText("Lebron's Birthday")).check(matches(isDisplayed()));
            onView(withText("Lebron's Birthday")).perform(click());

            // Click view poster button
            onView(withId(R.id.viewPosterButton)).check(matches(isDisplayed()));
            onView(withId(R.id.viewPosterButton)).perform(click());

            // Check that the poster exists
            onView(withText("Event Poster")).check(matches(isDisplayed()));
        }
    }

    @Test
    public void testRemoveEventPoster() {
        final Context targetContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        final Intent intent = new Intent(targetContext, SelectRoleActivity.class);

        GlobalApp globalApp = (GlobalApp) targetContext.getApplicationContext();
        globalApp.setDb(mockFirestore);

        try (final ActivityScenario<SelectRoleActivity> scenario = ActivityScenario.launch(intent)) {
            // User is not admin, so admin button should not show
            onView(ViewMatchers.withId(R.id.entrantButton)).check(matches(isDisplayed()));
            onView(withId(R.id.organizerButton)).check(matches(isDisplayed()));
            onView(withId(R.id.adminButton)).check(matches(not(isDisplayed())));

            // User clicks "Organizer"
            onView(withId(R.id.organizerButton)).perform(click());

            // Profile activity should open and organizer profile should be displayed
            onView(withId(R.id.organizerProfileLayout)).check(matches(isDisplayed()));


            // The organizer's events should be displayed
            onView(withText("Lebron's Birthday")).check(matches(isDisplayed()));
            onView(withText("Lebron's Birthday")).perform(click());

            // Click view poster button
            onView(withId(R.id.editPosterButton)).check(matches(isDisplayed()));
            onView(withId(R.id.editPosterButton)).perform(click());

            onView(withText("Remove Poster")).check(matches(isDisplayed()));
            onView(withText("Remove Poster")).perform(click());

            // Click view poster button
            onView(withId(R.id.viewPosterButton)).check(matches(isDisplayed()));
            onView(withId(R.id.viewPosterButton)).perform(click());

            // Check that there is no event poster
            onView(withText("No Event Poster")).check(matches(isDisplayed()));
        }
    }

    @Override
    protected void loadMockEventData(Map<String, Map<String, Object>> events) {
        super.loadMockEventData(events);
        // Initialize event data
        HashMap<String, Object> eventData1 = new HashMap<>();
        eventData1.put("name", "Lebron's Birthday");
        eventData1.put("organizerDeviceId", deviceId);
        eventData1.put("facility", "Crypto.com Arena");
        eventData1.put("waitListLimit", 10L);
        eventData1.put("attendeeLimit", 2L);
        eventData1.put("date", "2025-12-30");
        eventData1.put("hours", 18L);
        eventData1.put("minutes", 15L);
        eventData1.put("lotteryDate", "2025-09-01");
        eventData1.put("lotteryHours", 8L);
        eventData1.put("lotteryMinutes", 0L);
        eventData1.put("waitList", List.of());
        eventData1.put("createdTimeMillis", 1731294000000L); // event created Nov 10 2024 8:00:00 PM
        eventData1.put("poster", "");
        events.put("myFakeEventId1", eventData1);
    }
}
